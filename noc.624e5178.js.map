{"mappings":"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","sources":["./src/PVector.ts","./src/index.ts"],"sourcesContent":["export class PVector {\n  constructor(public x: number, public y: number) {}\n  add(v: PVector) {\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n  sub(v: PVector) {\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n  mult(n: number) {\n    this.x *= n;\n    this.y *= n;\n\n    return this;\n  }\n  div(n: number) {\n    this.x /= n;\n    this.y /= n;\n\n    return this;\n  }\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  limit(max: number) {\n    if (this.mag() > max) {\n      this.normalize().mult(max);\n    }\n\n    return this;\n  }\n  heading() {\n    return Math.atan2(this.y, this.x);\n  }\n  rotate(angle: number) {\n    let newHeading = this.heading() + angle;\n    const mag = this.mag();\n    this.x = Math.cos(newHeading) * mag;\n    this.y = Math.sin(newHeading) * mag;\n\n    return this;\n  }\n  magSq() {\n    const { x, y } = this;\n\n    return x * x + y * y;\n  }\n  normalize() {\n    const mag = this.mag();\n    // here we multiply by the reciprocal instead of calling 'div()'\n    // since div duplicates this zero check.\n    if (mag !== 0) this.div(mag);\n\n    return this;\n  }\n  setMag(newMag: number) {\n    this.normalize().mult(newMag);\n\n    return this;\n  }\n  lerp(x: number, y: number, amount: number) {\n    this.x += (x - this.x) * amount || 0;\n    this.y += (y - this.y) * amount || 0;\n\n    return this;\n  }\n  get() {\n    return new PVector(this.x, this.y);\n  }\n  static random2D() {\n    const angle = Math.random() * (Math.PI * 2);\n\n    return new PVector(Math.cos(angle), Math.sin(angle));\n  }\n  static add(v1: PVector, v2: PVector) {\n    return new PVector(v1.x + v2.x, v1.y + v2.y);\n  }\n  static sub(v1: PVector, v2: PVector) {\n    return new PVector(v1.x - v2.x, v1.y - v2.y);\n  }\n  static mult(v: PVector, amount: number) {\n    return new PVector(v.x * amount, v.y * amount);\n  }\n  static div(v: PVector, amount: number) {\n    return new PVector(v.x / amount, v.y / amount);\n  }\n}\n","import { PVector } from \"./PVector\";\n\nconst canvas: HTMLCanvasElement = document.getElementById(\"canvas\") as any;\nconst ctx = canvas.getContext(\"2d\");\ndocument.body.style.margin = \"0\";\n\nlet mouse = new PVector(0, 0);\nlet mousedown: boolean;\nlet width: number;\nlet height: number;\n\ndocument.onmousemove = function (event) {\n  mouse = new PVector(event.clientX, event.clientY);\n};\n\ndocument.onmousedown = function () {\n  mousedown = true;\n};\n\ndocument.onmouseup = function () {\n  mousedown = false;\n};\n\nfunction size(_width: number, _height: number) {\n  canvas.width = width = _width;\n  canvas.height = height = _height;\n}\n\nfunction background(r, g = r, b = g) {\n  ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\n  ctx.fillRect(0, 0, width, height);\n}\n\nfunction random(): number;\nfunction random(max: number): number;\nfunction random(min: number, max: number): number;\nfunction random(min?: number, max?: number) {\n  if (typeof min !== \"number\") return Math.random();\n\n  if (typeof max !== \"number\") {\n    max = min;\n    min = 0;\n  }\n\n  return Math.random() * (max - min + 1) + min;\n}\n\nfunction constrain(n: number, low: number, high: number): number {\n  return Math.min(Math.max(n, low), high);\n}\n\nclass Mover {\n  location: PVector;\n  velocity: PVector;\n  acceleration: PVector;\n  topSpeed: number;\n  mass: number;\n  color: string;\n  G: number;\n  constructor(m: number, x: number, y: number) {\n    this.mass = m;\n    this.location = new PVector(x, y);\n    this.velocity = new PVector(0, 0);\n    this.acceleration = new PVector(0, 0);\n    this.topSpeed = 4;\n    this.G = 0.4;\n    this.color = `hsl(${random(360)}, 100%, 50%)`;\n  }\n  applyForce(force: PVector) {\n    this.acceleration.add(PVector.div(force, this.mass));\n  }\n  update() {\n    this.velocity.add(this.acceleration);\n    this.location.add(this.velocity);\n    this.acceleration.mult(0);\n  }\n  attract(m: Mover) {\n    const force = PVector.sub(this.location, m.location);\n    const distance = constrain(force.mag(), 5.0, 25.0);\n    const strength = (this.G * this.mass * m.mass) / (distance * distance);\n    return force.normalize().mult(strength);\n  }\n  display() {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.ellipse(\n      this.location.x,\n      this.location.y,\n      this.mass * 16,\n      this.mass * 16,\n      Math.PI / 4,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n  }\n  checkEdges() {\n    if (this.location.x > width) {\n      this.location.x = width;\n      this.velocity.x *= -1;\n    } else if (this.location.x < 0) {\n      this.velocity.x *= -1;\n      this.location.x = 0;\n    }\n\n    if (this.location.y > height) {\n      this.location.y = height;\n      this.velocity.y *= -1;\n    }\n  }\n  isInside(l: Liquid) {\n    return (\n      this.location.x >= l.x &&\n      this.location.x < l.x + l.w &&\n      this.location.y >= l.y &&\n      this.location.y < l.y + l.h\n    );\n  }\n  drag(l: Liquid) {\n    const speed = this.velocity.mag();\n    const dragMagnitude = l.c * speed * speed;\n\n    const drag = this.velocity.get().mult(-1).normalize().mult(dragMagnitude);\n    this.applyForce(drag);\n\n    return this;\n  }\n}\n\nclass Liquid {\n  constructor(\n    public x: number,\n    public y: number,\n    public w: number,\n    public h: number,\n    public c: number\n  ) {}\n  display() {\n    ctx.fillStyle = \"hsl(200, 100%, 50%)\";\n    ctx.rect(this.x, this.y, this.w, this.h);\n    ctx.fill();\n  }\n}\n\nclass Attractor {\n  mass: number;\n  location: PVector;\n  G: number;\n  constructor() {\n    this.location = new PVector(width / 2, height / 2);\n    this.mass = 20;\n    this.G = 0.4;\n  }\n  attract(m: Mover) {\n    const force = PVector.sub(this.location, m.location);\n    const distance = constrain(force.mag(), 5, 25);\n    const strength = (this.G * this.mass * m.mass) / (distance * distance);\n    return force.normalize().mult(strength);\n  }\n  display(): void {\n    ctx.beginPath();\n    ctx.ellipse(\n      this.location.x,\n      this.location.y,\n      this.mass * 2,\n      this.mass * 2,\n      Math.PI / 4,\n      0,\n      2 * Math.PI\n    );\n    ctx.fillStyle = `rgba(200, 200, 200, ${175 / 255})`;\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n\nlet movers: Mover[];\nlet a: Attractor;\n\nfunction setup() {\n  size(640, 360);\n  movers = Array.from({length: 10});\n  for (let i = 0; i < movers.length; i++) {\n    movers[i] = new Mover(random(0.1, 2), random(width), random(height));\n  }\n  a = new Attractor();\n}\n\nfunction draw(time) {\n  background(255);\n  a.display();\n  for (let i = 0; i < movers.length; i++) {\n    for (let j = 0; j < movers.length; j++) {\n      if (i !== j) {\n        const force = movers[j].attract(movers[i]);\n        movers[i].applyForce(force);\n      }\n    }\n    movers[i].update();\n    movers[i].display();\n  }\n  requestAnimationFrame(draw);\n}\n\nsetup();\nrequestAnimationFrame(draw);\n"],"names":["PVector","x","y","$ba5ef87d1fb5385a632ffa8fb06cc5$var$_classCallCheck","this","angle","Math","random","PI","cos","sin","v1","v2","v","amount","n","sqrt","max","mag","normalize","mult","atan2","newHeading","heading","div","newMag","canvas","document","getElementById","ctx","getContext","body","style","margin","width","height","$ba5ef87d1fb5385a632ffa8fb06cc5$export$PVector","min","constrain","low","high","onmousemove","event","clientX","clientY","onmousedown","onmouseup","movers","a","Mover","m","$b04660a404e967a338647ceb28cef6e$var$_classCallCheck","mass","location","velocity","acceleration","topSpeed","G","color","concat","force","add","sub","distance","strength","fillStyle","beginPath","ellipse","fill","l","w","h","speed","dragMagnitude","c","drag","get","applyForce","Attractor","stroke","_width","_height","Array","from","length","i","setup","requestAnimationFrame","draw","time","r","g","arguments","undefined","b","fillRect","background","display","j","attract","update"],"version":3,"file":"noc.624e5178.js.map"}